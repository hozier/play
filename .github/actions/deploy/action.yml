name: "Deploy CDK Resources for application to AWS"
description: "Deploy infrastructure and services using AWS CDK"
inputs:
  region:
    description: "AWS region to deploy to"
    required: true
  registry:
    description: "Docker registry URL"
    required: true
  repository:
    description: "Docker repository name"
    required: true
  aws_access_key_id:
    description: "AWS Access Key ID"
    required: true
  aws_secret_access_key:
    description: "AWS Secret Access Key"
    required: true
  git_sha:
    description: "Docker image tag"
    required: true
  app_name:
    description: "Application name"
    required: true
  stage:
    description: "AWS environment"
    required: true
  desired_fargate_task_count:
    description:
      "Desired count of Fargate tasks (e.g., 0 to scale down, 1 to scale up)"
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug Inputs
      shell: bash
      run: |
        echo "Registry: ${{ inputs.registry }}"
        echo "Repository: ${{ inputs.repository }}"
        echo "Git SHA: ${{ inputs.git_sha }}"
        echo "AWS Access Key ID: ${{ inputs.aws_access_key_id }}"
        echo "AWS Secret Access Key: [REDACTED]"
        echo "Region: ${{ inputs.region }}"
        echo "App Name: ${{ inputs.app_name }}"
        echo "Stage: ${{ inputs.stage }}"
        echo "Desired Fargate Task Count: ${{ inputs.desired_fargate_task_count }}"

    - name: CDK prepare
      working-directory: ./infrastructure
      shell: bash
      run: npm ci

    - name: Bootstrap CDK Environment
      working-directory: ./infrastructure
      shell: bash
      env:
        AWS_REGION: ${{ inputs.region }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}

      run: |
        if ! command -v cdk &> /dev/null; then
          npm install -g aws-cdk
        fi
        if ! aws s3 ls "s3://cdk-${AWS_REGION}-${AWS_ACCOUNT_ID}" &> /dev/null; then
          echo "Bootstrapping CDK environment..."
          cdk bootstrap aws://${AWS_ACCOUNT_ID}/${AWS_REGION}
        else
          echo "CDK environment already bootstrapped."
        fi

    - name: Deploy with CDK
      working-directory: ./infrastructure
      shell: bash
      env:
        DESIRED_COUNT: ${{ inputs.desired_fargate_task_count }}
        REGISTRY: ${{ inputs.registry }}
        REPOSITORY: ${{ inputs.repository }}
        IMAGE_TAG: ${{ inputs.git_sha }}
        AWS_REGION: ${{ inputs.region }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}

      run: |
        if ! command -v cdk &> /dev/null; then
          npm install -g aws-cdk
        fi
        cdk synth
        cdk deploy --all --require-approval never --outputs-file cdk-outputs.json

    - name: Query Load Balancer DNS Name
      working-directory: ./infrastructure
      shell: bash
      run: |
        echo "Load Balancer DNS Name:"
        cat cdk-outputs.json | jq -r '.["app-'${{ inputs.app_name }}'-service-load-balanced-fargate-service-stack"] | to_entries[] | select(.key | startswith("LoadBalancerConstructLoadBalancerDNSName")) | .value'
