name: "Build & Publish Artifact Locally"
description: "Builds a Docker image and saves it as a tarball"

inputs:
  registry:
    description: "Docker registry URL"
    required: true
  repository:
    description: "Docker repository name"
    required: true
  git_sha:
    description: "Git SHA of the built image"
    required: true
  aws_access_key_id:
    description: "AWS account details"
    required: true
  aws_secret_access_key:
    description: "AWS account details"
    required: true
  region:
    description: "AWS region"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: "21"
        distribution: "temurin"

    - name: Install sbt
      shell: bash
      run: |
        curl -sL https://raw.githubusercontent.com/sbt/sbt/master/sbt -o /usr/local/bin/sbt
        chmod +x /usr/local/bin/sbt
        sbt sbtVersion

    - name: Cache sbt dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.ivy2/cache
          ~/.sbt
          ~/.coursier
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
        restore-keys: |
          ${{ runner.os }}-sbt-

    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.region }}

    - name: Load keystore secrets
      if: steps.secrets-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "Fetching keystore secrets from Secrets Manager..."
        echo "KEYSTORE_BASE64=$(aws secretsmanager get-secret-value --secret-id keystore-p12-base64 --query SecretString --output text)" >> $GITHUB_ENV
        echo "KEYSTORE_PASSWORD_BASE64=$(aws secretsmanager get-secret-value --secret-id keystore-pwd-base64 --query SecretString --output text)" >> $GITHUB_ENV
        echo "DEFAULT_AUTH_JWT=true" >> $GITHUB_ENV # use jwt validation for authenticated routes
        echo "Secrets fetched and exported to environment."

    - name: Clean, compile, and run tests
      shell: bash
      run: |
        sbt clean compile tests/test

    - name: Build Docker image
      if: success()
      shell: bash
      env:
        GIT_SHA: ${{ inputs.git_sha }}
        REGISTRY: ${{ inputs.registry }}
      run: |
        sbt app/docker:publishLocal

    - name: Save Docker image as tarball
      if: success()
      shell: bash
      run: |
        docker save -o image.tar ${{ inputs.registry }}/${{ inputs.repository }}:${{ inputs.git_sha }}

    - name: Upload Docker image
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: image.tar
