name: "Build & Publish Artifact Locally"
description: "Builds a Docker image and saves it as a tarball"

inputs:
  registry:
    description: "Docker registry URL"
    required: true
  repository:
    description: "Docker repository name"
    required: true
  git_sha:
    description: "Git SHA of the built image"
    required: true
  keystore_base64:
    description: "Base64 encoded keystore content"
    required: true
  keystore_password_base64:
    description: "Base64 encoded keystore password"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: "21"
        distribution: "temurin"

    - name: Install sbt
      shell: bash
      run: |
        curl -sL https://raw.githubusercontent.com/sbt/sbt/master/sbt -o /usr/local/bin/sbt
        chmod +x /usr/local/bin/sbt
        sbt sbtVersion

    - name: Cache sbt dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.ivy2/cache
          ~/.sbt
          ~/.coursier
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
        restore-keys: |
          ${{ runner.os }}-sbt-

    - name: Decode and verify keystore
      shell: bash
      env:
        KEYSTORE_BASE64: ${{ inputs.keystore_base64 }}
        KEYSTORE_PASSWORD_BASE64: ${{ inputs.keystore_password_base64 }}
      run: |
        mkdir -p /tmp/secrets
        echo "$KEYSTORE_BASE64" | base64 -d > /tmp/secrets/keystore.p12
        echo "$KEYSTORE_PASSWORD_BASE64" | base64 -d > /tmp/secrets/password.txt
        STOREPASS=$(cat /tmp/secrets/password.txt)

        echo "Verifying keystore file..."
        keytool -list -keystore /tmp/secrets/keystore.p12 -storepass "$STOREPASS" -storetype PKCS12 || {
          echo "‚ùå Failed to load keystore. Check your KEYSTORE_BASE64 and KEYSTORE_PASSWORD_BASE64 secrets."
          exit 1
        }

    - name: Clean, compile, and run tests
      shell: bash
      run: |
        sbt clean compile tests/test

    - name: Build Docker image
      if: success()
      shell: bash
      env:
        GIT_SHA: ${{ inputs.git_sha }}
        REGISTRY: ${{ inputs.registry }}
      run: |
        sbt app/docker:publishLocal

    - name: Save Docker image as tarball
      if: success()
      shell: bash
      run: |
        docker save -o image.tar ${{ inputs.registry }}/${{ inputs.repository }}:${{ inputs.git_sha }}

    - name: Upload Docker image
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: image.tar
